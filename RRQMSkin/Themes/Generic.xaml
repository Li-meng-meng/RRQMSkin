<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:RRQMSkin"
    xmlns:xmlEditor="clr-namespace:RRQMSkin.Xml">

    <Style TargetType="{x:Type local:CorrugatedButton}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CorrugatedButton}">
                    <Border  Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                           CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Name="mainGrid">
                            <Canvas Panel.ZIndex="-1">
                                <Ellipse x:Name="CorrugatedEllipse" Fill="{TemplateBinding CorrugatedBrush}" Width="1" Height="1" />
                            </Canvas>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SpeedDial}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SpeedDial}">
                    <Grid MinWidth="200" MinHeight="200">
                        <Ellipse />
                        <local:Sector Fill="#00BE8B" StartAngle="149" EndAngle="230" MaxRadiusRatio="0.98" MinRadiusRatio="0.8" />
                        <local:Sector Fill="#14BEFF" StartAngle="230" EndAngle="320" MaxRadiusRatio="0.98" MinRadiusRatio="0.8" />
                        <local:Sector Fill="#FF2975" StartAngle="320" EndAngle="391" MaxRadiusRatio="0.98" MinRadiusRatio="0.8" />
                        <local:Sector Fill="Orange" StartAngle="149" EndAngle="{TemplateBinding PointerAngle}" MaxRadiusRatio="0.8" MinRadiusRatio="0.7" />

                        <local:Dial StartAngle="150" TickAngle="30" TickCount="9" StrokeThickness="3" Stroke="Black" MinRadiusRatio="0.7" MaxRadiusRatio="0.95" />
                        <local:Dial StartAngle="165" TickAngle="30" TickCount="8" StrokeThickness="2" Stroke="Black" MinRadiusRatio="0.8" MaxRadiusRatio="0.95" />
                        <local:Dial StartAngle="157.5" TickAngle="15" TickCount="16" StrokeThickness="1" Stroke="Black" MinRadiusRatio="0.8" MaxRadiusRatio="0.95" />
                        <local:DialText Text="0,20,40,60,80,100,120,140,160"  StartAngle="150" FontSize="20" RadiusRatio="0.6" TickAngle="30" />

                        <local:DialText Text="10,30,50,70,90,110,130,150" StartAngle="165" TickAngle="30" FontSize="12" RadiusRatio="0.7" />

                        <local:Pointer x:Name="pointer"  RatioCenter="0.2,0.5" RatioAngle="{TemplateBinding PointerAngle}">
                            <local:Pointer.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF3C57F5" Offset="0" />
                                    <GradientStop Color="#FFF38F8A" Offset="1" />
                                </LinearGradientBrush>
                            </local:Pointer.Fill>
                            <local:Pointer.Effect>
                                <DropShadowEffect ShadowDepth="0" Color="Blue" BlurRadius="10" />
                            </local:Pointer.Effect>
                        </local:Pointer>
                        <Ellipse Width="10" Height="10" Fill="White" />
                        <Ellipse Width="8" Height="8" Stroke="DarkCyan" StrokeThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Clock}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Clock}">
                    <Grid MinHeight="100" MinWidth="100">
                        <local:Dial x:Name="hourDial" Stroke="Black" StrokeThickness="6" TickCount="12" MaxRadiusRatio="1" MinRadiusRatio="0.9" />
                        <local:Dial x:Name="minuteDial" Stroke="Black" StrokeThickness="1" TickAngle="6" TickCount="60"  MaxRadiusRatio="1" MinRadiusRatio="0.9" />
                        <local:DialText x:Name="dialText" Text="3,4,5,6,7,8,9,10,11,12,1,2" FontWeight="Bold" StartAngle="0" TickAngle="30" FontSize="20" RadiusRatio="0.8" />
                        <local:Pointer x:Name="minutePointer" RatioAngle="190" RatioCenter="0,0.5" PointerHeight="5" PointerWidth="130" Fill="Black" />
                        <local:Pointer x:Name="hourPointer" RatioAngle="130" PointerWidth="80" RatioCenter="0,0.5" Fill="Black" />
                        <local:Pointer x:Name="secondPointer" RatioAngle="340" PointerWidth="160" PointerHeight="3" RatioCenter="0.2,0.5" Fill="Red" />
                        <Ellipse Fill="White" Width="10" Height="10" />
                        <Ellipse Width="8" Height="8" Stroke="DarkCyan" StrokeThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:RoundProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RoundProgressBar}">
                    <Grid Background="{TemplateBinding Background}">
                        <local:Sector    StartAngle="0" EndAngle="360" Fill="#CED0CF" MinRadiusRatio="0.7" MaxRadiusRatio="1" Stroke="Transparent" />
                        <local:Sector    StartAngle="0" EndAngle="{TemplateBinding Angle}"  RoundStyle="Both" MinRadiusRatio="0.7" MaxRadiusRatio="1" Stroke="Transparent">
                            <local:Sector.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2B65F0" Offset="0" />
                                    <GradientStop Color="#FFFF3BA4" Offset="1" />
                                </LinearGradientBrush>
                            </local:Sector.Fill>
                        </local:Sector>
                        <TextBlock FontFamily="{TemplateBinding FontFamily}"
                                   Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Progress,StringFormat=0.00%}"
                                   HorizontalAlignment="Center"  VerticalAlignment="Center"
                                   FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Loading}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Loading}">
                    <Grid Background="{TemplateBinding Background}">
                        <local:Sector StartAngle="0" EndAngle="360" Fill="#E8E8E7" MinRadiusRatio="0.8" MaxRadiusRatio="1" />
                        <local:Sector x:Name="sector" StartAngle="0" Fill="{TemplateBinding Foreground}"
                                      MinRadiusRatio="0.8" MaxRadiusRatio="1" RoundStyle="Both"
                                      EndAngle="{TemplateBinding EndAngle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FanChart}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FanChart}">
                    <Grid>
                        <local:Sector Fill="Aqua" StartAngle="0" EndAngle="30"    MinRadiusRatio="0" MaxRadiusRatio="0.8" />
                        <local:Sector Fill="SeaGreen" StartAngle="30" EndAngle="90"   MinRadiusRatio="0" MaxRadiusRatio="0.8" />
                        <local:Sector Fill="Bisque" StartAngle="90" EndAngle="110"  MinRadiusRatio="0" MaxRadiusRatio="0.8" />
                        <local:Sector Fill="CornflowerBlue" StartAngle="110" EndAngle="190" MinRadiusRatio="0" MaxRadiusRatio="0.8" />
                        <local:Sector Fill="DarkGoldenrod" StartAngle="190" EndAngle="250" MinRadiusRatio="0" MaxRadiusRatio="0.8" />
                        <local:Sector Fill="IndianRed" StartAngle="250" EndAngle="360" MinRadiusRatio="0" MaxRadiusRatio="0.8" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   
    <Style x:Key="toolButtom" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="1" Margin="3,0" Width="25" Height="25">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="#E9E3B1" />
                            <Setter TargetName="border" Property="Background" Value="#FFFCF4" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:RRQMEffectWindow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RRQMEffectWindow}">
                    <Grid Name="windowGrid">
                        <Border Name="mainBorder" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid Name="header" Grid.Row="0" Panel.ZIndex="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Name="title" Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Name="ico" Source="{TemplateBinding Icon}" Margin="3,0" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" Margin="3,0,0,0" VerticalAlignment="Center" Content="{TemplateBinding  TitleContent}" />
                                    </Grid>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                                        <Button Name="minButton" Style="{StaticResource  toolButtom}"  Command="{Binding MinWindowCommand,RelativeSource={RelativeSource Mode=TemplatedParent}}"         Content="{TemplateBinding MinButtonContent}" />
                                        <Button Name="maxOrNormalButton" Style="{StaticResource  toolButtom}"  Command="{Binding MaxOrNormalWindowCommand,RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="{TemplateBinding MaxOrNormalContent}" />
                                        <Button Name="closeButton" Style="{StaticResource  toolButtom}"  Command="{Binding CloseWindowCommand,RelativeSource={RelativeSource Mode=TemplatedParent}}"       Content="{TemplateBinding CloseButtonContent}" />
                                    </StackPanel>
                                </Grid>
                                <ContentPresenter x:Name="content" Grid.Row="1" Grid.RowSpan="2" Content="{TemplateBinding Content}" HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Margin="{TemplateBinding Padding}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowStyle" Value="SingleBorderWindow">
                            <Setter Property="Visibility" TargetName="minButton" Value="Visible" />
                            <Setter Property="Visibility" TargetName="maxOrNormalButton" Value="Visible" />
                            <Setter Property="Visibility" TargetName="closeButton" Value="Visible" />
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="ToolWindow">
                            <Setter Property="Visibility" TargetName="minButton" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="maxOrNormalButton" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="closeButton" Value="Visible" />
                            <Setter Property="Visibility" TargetName="ico" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ContentFill" Value="true">
                            <Setter Property="Grid.Row" TargetName="content" Value="0" />
                        </Trigger>
                        <Trigger Property="ContentFill" Value="false">
                            <Setter Property="Grid.Row" TargetName="content" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
    <Style TargetType="{x:Type local:InputBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="{Binding CornerRadius,RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                        <Trigger Property="local:InputBox.IsComplies" Value="false">
                            <Setter Property="BorderBrush" TargetName="border" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:RRQMWindow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RRQMWindow}">
                    <Border Name="mainBorder" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid Name="header" Grid.Row="0" Panel.ZIndex="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Name="title" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Image Name="ico" Source="{TemplateBinding Icon}" Margin="3,0" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" Margin="3,0,0,0" VerticalAlignment="Center" Content="{TemplateBinding  TitleContent}" />
                                </Grid>
                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <Button Name="minButton" Style="{StaticResource  toolButtom}"  Command="{Binding MinWindowCommand,RelativeSource={RelativeSource Mode=TemplatedParent}}"         Content="{TemplateBinding MinButtonContent}" />
                                    <Button Name="maxOrNormalButton" Style="{StaticResource  toolButtom}"  Command="{Binding MaxOrNormalWindowCommand,RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="{TemplateBinding MaxOrNormalContent}" />
                                    <Button Name="closeButton" Style="{StaticResource  toolButtom}"  Command="{Binding CloseWindowCommand,RelativeSource={RelativeSource Mode=TemplatedParent}}"       Content="{TemplateBinding CloseButtonContent}" />
                                </StackPanel>
                            </Grid>
                            <ContentPresenter x:Name="content" Grid.Row="1" Grid.RowSpan="2" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowStyle" Value="SingleBorderWindow">
                            <Setter Property="Visibility" TargetName="minButton" Value="Visible" />
                            <Setter Property="Visibility" TargetName="maxOrNormalButton" Value="Visible" />
                            <Setter Property="Visibility" TargetName="closeButton" Value="Visible" />
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="ToolWindow">
                            <Setter Property="Visibility" TargetName="minButton" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="maxOrNormalButton" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="closeButton" Value="Visible" />
                            <Setter Property="Visibility" TargetName="ico" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ContentFill" Value="true">
                            <Setter Property="Grid.Row" TargetName="content" Value="0" />
                        </Trigger>
                        <Trigger Property="ContentFill" Value="false">
                            <Setter Property="Grid.Row" TargetName="content" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="deleteButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="border"  Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Ellipse Fill="Red">
                            <Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0" Color="Black" />
                            </Ellipse.Effect>
                        </Ellipse>
                        <Path Data="M 0,0 L10,0" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="White" StrokeThickness="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard  Storyboard.TargetName="border" Storyboard.TargetProperty="Width">
                                    <DoubleAnimation Duration="0:0:0.2" To="23" />
                                </Storyboard>
                            </BeginStoryboard>
                            <BeginStoryboard>
                                <Storyboard  Storyboard.TargetName="border" Storyboard.TargetProperty="Height">
                                    <DoubleAnimation Duration="0:0:0.2" To="23" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard  Storyboard.TargetName="border" Storyboard.TargetProperty="Width">
                                    <DoubleAnimation Duration="0:0:0.2" To="20" />
                                </Storyboard>
                            </BeginStoryboard>
                            <BeginStoryboard>
                                <Storyboard  Storyboard.TargetName="border" Storyboard.TargetProperty="Height">
                                    <DoubleAnimation Duration="0:0:0.2" To="20" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="addButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Ellipse  Width="25" Height="25" x:Name="ellipse" Fill="#C2C3C9" StrokeThickness="2" Stroke="Beige" />
                        <TextBlock Text="✚" Foreground="Black" Opacity="0.6" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <!--<Path Data="M 0,0 L10,0" VerticalAlignment="Center" Stroke="Black" StrokeThickness="2"  HorizontalAlignment="Center" />
                                                    <Path Data="M 0,0 L0,10" VerticalAlignment="Center" Stroke="Black" StrokeThickness="2"   HorizontalAlignment="Center" />-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="ellipse" Value="#BCE8FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="isExpandedButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Width="20" Height="20">
                        <Grid SnapsToDevicePixels="False">
                            <Ellipse x:Name="circle" Fill="AliceBlue" HorizontalAlignment="Center" Height="20"  VerticalAlignment="Center" Width="20" />
                            <Path x:Name="arrow" Panel.ZIndex="1" Data="M 0,1 L 5,5 L 10,1" HorizontalAlignment="Center"  SnapsToDevicePixels="false" Stroke="Black" StrokeThickness="2" VerticalAlignment="Center" />
                            <ContentPresenter  HorizontalAlignment="Stretch" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 0,6  L 5,0  L 10,6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="red" />
                            <Setter Property="Fill" TargetName="circle" Value="green" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="blue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="attributeListBox"  TargetType="{x:Type ItemsControl}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="deleteAttributeButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock x:Name="delete" Text="✖" FontSize="10" Opacity="0.3" Foreground="Black" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontSize" TargetName="delete" Value="13" />
                            <Setter Property="Opacity" TargetName="delete" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="attributeList">
        <Border Margin="10,0" Height="30" Background="#ADE62F" CornerRadius="5">
            <Grid  VerticalAlignment="Center" Margin="5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" MinWidth="60" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" Text="{Binding Key}" />
                <TextBlock VerticalAlignment="Center" Grid.Column="1" Text=":" Margin="3,0" />
                <ComboBox IsEnabled="{Binding  IsEditable}" IsEditable="True" Grid.Column="2" Text="{Binding Value,UpdateSourceTrigger=LostFocus}" Background="Transparent" />
                <Button x:Name="deleteAttributeButton" Style="{StaticResource deleteAttributeButton}" IsEnabled="{Binding IsEditable}"  Visibility="Hidden" Grid.Column="3" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" Command="{Binding RemoveCommand}" />
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="deleteAttributeButton" Value="Visible" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style  TargetType="{x:Type xmlEditor:XmlTreeView}">
        <Setter Property="Background" Value="GreenYellow" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.CacheLength="20,20"
                                            VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Item"
                                            Orientation="Vertical" IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xmlEditor:XmlTreeView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="deleteButton" Style="{StaticResource deleteButton}" IsEnabled="{TemplateBinding IsEditable}" Opacity="{Binding ElementName=addButton, Path=Opacity}"  Command="{Binding RemoveNodeCommand,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <ContentPresenter VerticalAlignment="Center"  Grid.Column="1" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <ItemsControl ItemsSource="{TemplateBinding AttributeCollection}" Style="{StaticResource attributeListBox}"   ItemTemplate="{StaticResource attributeList }"  BorderThickness="0" />
                                    <Button x:Name="addButton" Style="{StaticResource addButton}" Margin="5,0" IsEnabled="{TemplateBinding IsEditable}" Command="{Binding AddCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="Visible" Opacity="0" Width="25" Height="25" />
                                </StackPanel>
                                <ToggleButton Grid.Column="3" Style="{StaticResource isExpandedButton}" Visibility="{TemplateBinding ExpanderVisibility}" Panel.ZIndex="1" HorizontalAlignment="Center" x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter  x:Name="ItemsHost" Margin="0"  Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd"  Value="Black" />
                            <Setter Property="BorderThickness" TargetName="Bd"  Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="{x:Type xmlEditor:XmlEditor}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.CacheLength="20,20"
                                            VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Item"
                                            Orientation="Vertical" IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="_tv_scrollviewer_"  CanContentScroll="True" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>